@page "/employees"

@using BlazorCrud.Shared.Dtos.Employee;
@using CurrieTechnologies.Razor.SweetAlert2;
@using BlazorCrud.Client.Services;
@using BlazorCrud.Client.Interfaces;

@inject SweetAlertService Swal;
@inject IEmployeeService employeeService;

<h2>Employees</h2>

<a class="btn btn-success btn-sm mb-3" href="employee">New employee</a>

<table class="table">
    <thead>
        <tr>
            <th>Full name</th>
            <th>Departament</th>
            <th>Salary</th>
            <th>Contract Date</th>
        </tr>
    </thead>
    <tbody>
        @if (employeeList is null)
        {
            <tr>
                <td colspan="5" align="center">
                    <img style="width:50px" src="https://media.tenor.com/28DFFVtvNqYAAAAC/loading.gif" />
                </td>
            </tr>
        }
        else
        {
            @foreach (var item in employeeList)
            {
                <tr>
                    <td>@item.FullName</td>
                    <td>@item.Departament</td>
                    <td>@item.Salary</td>
                    <td>@item.ContractDate.ToString("dd/MM/yyyy")</td>
                    <td>
                        <a class="btn btn-primary btn-sm" href="employee/@item.EmployeeId">
                            <i class="oi oi-pencil"></i>
                        </a>
                        <button type="button" class="btn btn-danger btn-sm ms-2" @onclick="(()=>Delete(item.EmployeeId))">
                            <i class="oi oi-trash"></i>
                        </button>
                    </td>
                </tr>
            }
        }
    </tbody>
</table>

@code {

    List<EmployeeDto>? employeeList = null;

    protected override async Task OnInitializedAsync()
    {
        employeeList = await employeeService.EmployeesList();
    }

    private async Task Delete(int id)
    {
        var result = await Swal.FireAsync(new SweetAlertOptions
            {
                Title = "Employee delete",
                Text = "Sure?",
                Icon = SweetAlertIcon.Question,
                ShowCancelButton = true
            });

        if (result.IsConfirmed)
        {
            var deleteEmployee = await employeeService.DeleteEmployee(id);

            if (deleteEmployee)
                employeeList = employeeList!.FindAll(x => x.EmployeeId != id);

        }
    }
}
